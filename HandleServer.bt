local int NORMAL_SUBOP;
local uint NORMAL_CurrentPos;
typedef struct 
{
    Frame header;
    short Op;
    int idx;
switch( GetPacketName(Op) ) 
{
    case "BC_LOGINOK": BC_LOGINOK packet; break;
    case "BC_IES_MODIFY_LIST": BC_IES_MODIFY_LIST packet; break;
    case "BC_COMMANDER_LIST": BC_COMMANDER_LIST packet; break;
    case "BC_COMMANDER_CREATE": BC_COMMANDER_CREATE packet; break;
    case "BC_COMMANDER_DESTROY": BC_COMMANDER_DESTROY packet; break;
    case "BC_BARRACKNAME_CHANGE": BC_BARRACKNAME_CHANGE packet; break;
    case "BC_SERVER_ENTRY": BC_SERVER_ENTRY packet; break;
    case "BC_START_GAMEOK": BC_START_GAMEOK packet; break;
    
    case "BC_NORMAL":
        NORMAL_CurrentPos = FTell();
        FSkip(2); // skip size
        NORMAL_SUBOP = ReadUShort();
        FSeek(NORMAL_CurrentPos);
        switch (NORMAL_SUBOP)
        {
            case 0x2: BC_NORMAL_2_COMMANDER_MOVE_OK packet; break;
            //case 0x4: BC_NORMAL_4 packet; break;
            //case 0x8: BC_NORMAL_8 packet; break;
            //case 0xB: BC_NORMAL_11_ZONE_TRAFFIC packet; break;
            default: UNKNOWN_NORMAL packet;
        }
        break;

    case "ZC_OBJECT_PROPERTY": ZC_OBJECT_PROPERTY packet; break;
    case "ZC_ENTER_MONSTER": ZC_ENTER_MONSTER packet; break;
    case "ZC_ADDON_MSG": ZC_ADDON_MSG packet; break;
    case "ZC_DIALOG_SELECT": ZC_DIALOG_SELECT packet; break;
    case "ZC_SYSTEM_MSG": ZC_DIALOG_SELECT packet; break;

    case "ZC_PC_MOVE_STOP": ZC_PC_MOVE_STOP packet; break;
    case "ZC_MOVE_DIR": ZC_MOVE_DIR packet; break;
    case "ZC_CONNECT_OK": ZC_CONNECT_OK packet; break;
    case "ZC_JUMP": ZC_JUMP packet; break;
    case "ZC_CHAT": ZC_CHAT packet; break;
    case "ZC_MOVE_SPEED": ZC_MOVE_SPEED packet; break;
    case "ZC_GUESTPAGE_MAP": ZC_GUESTPAGE_MAP packet; break;
    case "ZC_MYPC_ENTER": ZC_MYPC_ENTER packet; break;
    case "ZC_OPTION_LIST": ZC_OPTION_LIST packet; break;
    case "ZC_SKILLMAP_LIST": ZC_SKILLMAP_LIST packet; break;
    case "ZC_ACHIEVE_POINT_LIST": ZC_ACHIEVE_POINT_LIST packet; break;
    case "ZC_CHAT_MACRO_LIST": ZC_CHAT_MACRO_LIST packet; break;
    case "ZC_UI_INFO_LIST": ZC_UI_INFO_LIST packet; break;
    case "ZC_NPC_STATE_LIST": ZC_NPC_STATE_LIST packet; break;
    case "ZC_MYPAGE_MAP": ZC_MYPAGE_MAP packet; break;
    case "ZC_SET_POS": ZC_SET_POS packet; break;
    case "ZC_START_INFO": ZC_START_INFO packet; break;
    case "ZC_SKILL_LIST": ZC_SKILL_LIST packet; break;
    case "ZC_ABILITY_LIST": ZC_ABILITY_LIST packet; break;
    case "ZC_COOLDOWN_LIST": ZC_COOLDOWN_LIST packet; break;
    case "ZC_QUICK_SLOT_LIST": ZC_QUICK_SLOT_LIST packet; break;
    case "ZC_START_GAME": ZC_START_GAME packet; break;
    case "ZC_ENTER_PC": ZC_ENTER_PC packet; break;
    case "ZC_LEAVE": ZC_LEAVE packet; break;
    case "ZC_BUFF_LIST": ZC_BUFF_LIST packet; break;
    case "ZC_LOGIN_TIME": ZC_LOGIN_TIME packet; break;
    case "ZC_PLAY_SKILL_CAST_ANI": ZC_PLAY_SKILL_CAST_ANI packet; break;
    case "ZC_SKILL_CAST": ZC_SKILL_CAST packet; break;
    case "ZC_PLAY_ANI": ZC_PLAY_ANI packet; break;
    case "ZC_SKILL_READY": ZC_SKILL_READY packet; break;
    case "ZC_REST_SIT": ZC_REST_SIT packet; break;
    case "ZC_SKILL_ADD": ZC_SKILL_ADD packet; break;
    case "ZC_SESSION_OBJ_ADD": ZC_SESSION_OBJ_ADD packet; break;
    case "ZC_ITEM_EQUIP_LIST": ZC_ITEM_EQUIP_LIST packet; break;
    case "ZC_ITEM_INVENTORY_LIST": ZC_ITEM_INVENTORY_LIST packet; break;
    case "ZC_ITEM_ADD": ZC_ITEM_ADD packet; break;
    case "ZC_QUICKSLOT_REGISTER": ZC_QUICKSLOT_REGISTER packet; break;
    case "ZC_WIKI_ADD": ZC_WIKI_ADD packet; break;
    case "ZC_FACTION": ZC_FACTION packet; break;
    case "ZC_SET_NPC_STATE": ZC_SET_NPC_STATE packet; break;
    case "ZC_ACHIEVE_POINT": ZC_ACHIEVE_POINT packet; break;
    case "ZC_ROTATE": ZC_ROTATE packet; break;
    case "ZC_COOLDOWN_CHANGED": ZC_COOLDOWN_CHANGED packet; break;
    case "ZC_QUICK_ROTATE": ZC_QUICK_ROTATE packet; break;
    case "ZC_MSPD": ZC_MSPD packet; break;
    case "ZC_SHOW_EMOTICON": ZC_SHOW_EMOTICON packet; break;
    case "ZC_CREATE_SCROLLLOCKBOX": ZC_CREATE_SCROLLLOCKBOX packet; break;
    case "ZC_MOVE_STOP": ZC_MOVE_STOP packet; break;
    case "ZC_MOVE_PATH": ZC_MOVE_PATH packet; break;
    case "ZC_DEAD": ZC_DEAD packet; break;
    case "ZC_UPDATE_ALL_STATUS": ZC_UPDATE_ALL_STATUS packet; break;
    case "ZC_UPDATED_PCAPPEARANCE": ZC_UPDATED_PCAPPEARANCE packet; break;
    case "ZC_PC_PROP_UPDATE": ZC_PC_PROP_UPDATE packet; break;
    case "ZC_ITEM_REMOVE": ZC_ITEM_REMOVE packet; break;
    case "ZC_JOB_PTS": ZC_JOB_PTS packet; break;
    case "ZC_EXP_UP": ZC_EXP_UP packet; break;
    case "ZC_JOB_EXP_UP": ZC_JOB_EXP_UP packet; break;
    
    case "ZC_NORMAL":
        NORMAL_CurrentPos = FTell();
        FSkip(2); // skip size
        NORMAL_SUBOP = ReadUShort();
        FSeek(NORMAL_CurrentPos);
        switch (NORMAL_SUBOP)
        {
            case 20: ZC_NORMAL_20_CLASS_LVLUP packet; break;
        	case 28: ZC_NORMAL_28 packet; break;
            case 40: ZC_NORMAL_40_SKILLPROPS packet; break;
            case 44: ZC_NORMAL_44 packet; break;
            case 81: ZC_NORMAL_81 packet; break;
            case 84: ZC_NORMAL_84 packet; break;
            case 142: ZC_NORMAL_142 packet; break;
            case 151: ZC_NORMAL_151_PET_LIST packet; break;
            case 201: ZC_NORMAL_201 packet; break;
            case 202: ZC_NORMAL_202 packet; break;
            case 210: ZC_NORMAL_210 packet; break;
            case 217: ZC_NORMAL_217 packet; break;
            case 225: ZC_NORMAL_225 packet; break;
            case 229: ZC_NORMAL_229 packet; break;
            case 230: ZC_NORMAL_230 packet; break;
            case 234: ZC_NORMAL_234 packet; break;
            case 291: ZC_NORMAL_291 packet; break;
            case 292: ZC_NORMAL_292 packet; break;
            case 307: ZC_NORMAL_307 packet; break;
            case 312: ZC_NORMAL_312 packet; break;
            case 355: ZC_NORMAL_355 packet; break;
            case 360: ZC_NORMAL_360 packet; break;
            default: UNKNOWN_NORMAL packet;
        }
        break;

    default: if (Length-6 > 0) byte UNKNOWN[Length-6] <optimize=false, fgcolor=0x666666>;
}

} ServerPacket <optimize=false, bgcolor=0xAAAAFF>;

string DisplayServerPacket(ServerPacket &p)
{
    local string PacketDisplayStr;
    PacketName = GetPacketName(p.Op);
    if (PacketName == "ZC_NORMAL" || PacketName == "BC_NORMAL")
        SPrintf(PacketDisplayStr, "RECV@%s: %s (%d) (%d)", p.header.Time, PacketName, p.Op, p.packet.header.subOp);
    else
        SPrintf(PacketDisplayStr, "RECV@%s: %s (%d)", p.header.Time, PacketName, p.Op);
    return PacketDisplayStr;
}

